roll No | Hindi | English |
   1    |  80   |         |
   2    |       |   76    |
   3    |  88   |         |

//MongoDb
[
    {
        "rollNo":1,
        "Hindi":80,
        "computer":98
    },
    {
        "rollNo":3,
        "English":76
    },
    {
        "rollNo":1,
        "Hindi":88
    }
]

SQl        MongoDB
DataBase   DataBase
Tables     Collections
Row        Document
Select     Find
Insert     Insert
Update     Update
Delete     Remove

/////////Start MongoDB Sever(Local)////////
#window
(Server)
> open cmd and navigate to bin
> go inside folder C:\Program Files\MongoDB\5.5\Server\Bin
> mongod
(start server on port 27017)
** Do not close this cmd if using mongo in app
 
(Client) ** Only require to test queries
> open cmd and navigate to bin
> mongo

-----------------------------------------
#mac/linux
(start server on port 27017)
> open terminal
> mongod --dbpath data/db
> ** Do not close this terminal if using mongo in app

(Client) ** Only require to test queries
> open terminal
> mongo

>Show All Database
* show dbs

> Go Inside database
* use database

> See all the collections
* show collections

> See Datainside collection (find all records)
db.collectionName.find()
db.category.find()

**only for cmd line
db.category.find().pretty()

> To Create Database
* use 

> To Insert Record
* db.collectionName.insert({})

db.users.insert({"name":"Amit"})
db.users.insert({"name":"Manisha","city":"Chandigarh"})
db.users.insert({_id:1,"name":"John"})
db.users.insert({_id:2,"name":"Kanika"})

_id 
> Default Key (Primary Key)
> It always contains unique value
> We can add out own value to _id but should unique

Default (12 byte)
> Random number (5 byte)
> Series (3 bytes)
> TimeStamp (4 Bytes)

////Find with condition
db.products.find({category_id:2,company:"Lloyd"})

//projection(which all fields you want)
db.products.find({condition},{projection})

db.products.find({category_id:2},{product_name:1,category:1,_id:0})


db.products.count({category_id:2,company:"Lloyd"})

db.products.find({},{product_name:1,category:1,_id:0}).skip(5).limit(5)


db.products.find({category_id:2},{product_name:1,_id:0}).sort({product_name:-1})

db.restaurants.find({"mealTypes.mealtype_id":1}).pretty()

db.restaurants.find({cost:{$gt:500,$lt:800}},{restaurant_name:1,cost:1,_id:0}).pretty()


db.restaurants.find({"mealTypes.mealtype_id":{$in:[1,5,6]}}).pretty()



db.orders.updateOne(
    {condition},
    {$set:{data}}
)